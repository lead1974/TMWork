@model TMWork.Areas.Admin.ViewModels.User.UserIndex

@using Microsoft.AspNetCore.Identity
@using TMWork.Areas.Admin.ViewModels
@using TMWork.Data.Models.User
@using Kendo.Mvc.UI;

@inject SignInManager<AuthUser> SignInManager
@inject UserManager<AuthUser> UserManager
@inject RoleManager<AuthRole> RoleManager

@{
    ViewData["Title"] = "User Maintenance";
}

<div class="col-lg-12">
    <h1 class="page-header">Users</h1>
    <div class="btn-toolbar">
        <a asp-action="NewUser" asp-route-returnurl="@ViewData["ReturnUrl"]" class="btn btn-primary btn-lg"><i class="glyphicon glyphicon-plus"></i> Create User</a>
    </div>
    <h4 />

    @(Html.Kendo().Grid<TMWork.Areas.Admin.ViewModels.User.UserJquery>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(p => p.Id).ClientTemplate(
              "<a href='" + @Url.Action("EditUser", "User", new { area = "admin" }) + "/?Id=#=Id#' class='btn bth-xs btn-primary'><i class='glyphicon glyphicon-edit'></i> Edit</a> " +
              "<a href='" + @Url.Action("ResetPassword", "User", new { area = "admin" }) + "/?Id=#=Id#' class='btn bth-xs btn-default'><i class='glyphicon glyphicon-lock'></i> Password Reset</a> " +
              "<button class='btn bth-xs btn-danger js-delete' data-user-id=#=Id# data-user-email=#=Email#><i class='glyphicon glyphicon-trash'></i> Delete</button>"
              ).Title("Actions");
          columns.Bound(p => p.Email);
          columns.Bound(p => p.EmailConfirmed);
          columns.Bound(p => p.Roles);
          //columns.Command(command =>
          //{
          //    command.Edit();
          //    command.Destroy();
          //}).Width(300); //
      })
      .ToolBar(tools =>
      {
          //tools.ClientTemplate("<a href='" + @Url.Action("NewUser", "User", new { area = "admin" }) + "' class='btn btn-primary btn-md'><i class='glyphicon glyphicon-plus'></i> Create User</a> ");
          tools.Excel();
      })
      //.Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("Customer"))
      .Sortable()
      .Scrollable()
      .Pageable()
      .Filterable()
      .HtmlAttributes(new { style = "height:550px;" })
      .DataSource(dataSource =>
          dataSource
            .Ajax()
            .PageSize(20)
            .Model(model =>
            {
                model.Id(p => p.Id);
            })
            .Events(events => events.Error("error_handler"))
            .Read(read => read.Action("EditingPopup_Read", "User"))
      //.Create(update => update.Action("EditingPopup_Create", "User"))

      //.Update(update => update.Action("EditingPopup_Update", "User"))
      //.Destroy(update => update.Action("EditingPopup_Destroy", "User"))
      )
    )
</div>


@*
================================
        <div class="col-lg-12">
            <h1 class="page-header">Users</h1>



            <div class="btn-toolbar">
                <a asp-action="NewUser" asp-route-returnurl="@ViewData["ReturnUrl"]" class="btn btn-primary btn-lg"><i class="glyphicon glyphicon-plus"></i> Create User</a>
            </div>
            <h4 />
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-users fa-fw"></i> User Maintenance
                    </div>
                     /.panel-heading
                    <div class="panel-body">
                        <div class="list-group">
                            @*<div class="row">
                                    <div class="col-md-12">
                                        <section>
                                            <form asp-controller="User" asp-route-returnurl="/admin/index" method="post" class="form-horizontal">
                                                <div asp-validation-summary="All" class="text-danger"></div>
                                                <table id="authUser" class="table table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th>Email</th>
                                                            <th>Email Confirmed</th>
                                                            <th>Roles</th>
                                                            <th>Actions</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var user in Model.Users)
                                                        {
                                                        <tr>
                                                            <td><a href="@Url.Action("EditUser",new { user.Id })" class="btn bth-xs btn-primary"><i class="glyphicon glyphicon-edit"></i> @user.Email</a></td>
                                                            <td>@user.EmailConfirmed</td>
                                                            <td><b>@string.Join(", ", await @UserManager.GetRolesAsync(user))</b></td>
                                                            <td>
                                                                <div class="bt-group">
                                                                    <a href="@Url.Action("ResetPassword",new { user.Id })" class="btn bth-xs btn-default"><i class="glyphicon glyphicon-lock"></i> Reset Password</a>
                                                                    <a href="#" class="btn bth-xs btn-danger js-delete" data-user-id=@user.Id data-user-email=@user.Email><i class="glyphicon glyphicon-remove"></i> Delete</a>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </form>
                                        </section>
                                    </div>
                                </div>

                            <table id="users" class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Email</th>
                                        <th>Email Confirmed</th>
                                        <th>Roles</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </div>*@

 @section scripts
    {
            <script>

                $(document).ready(function () {
                    //var table = $("#users").DataTable({
                    //    ajax: {
                    //        url: "/api/user",
                    //        dataSrc: ""
                    //    },
                    //    columns: [
                    //        {
                    //            data: "email",
                    //            render: function (data, type, user) {
                    //                return "<a href='/admin/user/edituser?id=" + user.id + "' class='btn bth-xs btn-primary'><i class='glyphicon glyphicon-edit'></i> " + user.email + "</a>";
                    //            }
                    //        },
                    //        {
                    //            data: "emailConfirmed"
                    //        },
                    //        {
                    //            data: "roles",
                    //            render: function (data, type, user) {
                    //                return "<b>" + data + "</b>";
                    //            }
                    //        },
                    //        {
                    //            data: "id",
                    //            render: function (data, type, user) {
                    //                return "<a href='/admin/user/resetpassword?Id=" + data + "' class='btn bth-xs btn-default'><i class='glyphicon glyphicon-lock'></i> Reset Password</a> " +
                    //                       "<button class='btn bth-xs btn-danger js-delete' data-user-id=" + data + " data-user-email=" + user.email + "><i class='glyphicon glyphicon-trash'></i> Delete</button>";

                    //            }
                    //        }
                    //    ]                                            //Url.Action("DeleteUser", "User", new { area = "admin" }) + button.attr("data-user-id"),
                    //});
                        $("#grid").on("click", ".js-delete", function () {
                            var button = $(this);
                            bootbox
                                .confirm("Are you sure you want to delete this user : " + button.attr("data-user-email") + "?", function (result) {
                                    if (result) {
                                        $.ajax({
                                            url: "/admin/user/" + button.attr("data-user-id"), 
                                            method: "DELETE",
                                            success: function () {
                                                button.parent().parent().remove();
                                                //table.row(button.parents("tr")).remove().draw();
                                            }
                                        });
                                    }
                                })
                            .css({
                                'font-weight': 'bold',
                                'margin-top': function () {
                                    var w = $(window).height();
                                    var b = $(".modal-dialog").height();
                                    // should not be (w-h)/2
                                    var h = (w - b) / 2;
                                    return h + "px";
                                }
                            });
                        });
                    //    $("#authUser").on("click", ".js-delete", function () {
                    //        var link = $(this);
                    //        bootbox
                    //            .confirm("Are you sure you want to delete this user : " + link.attr("data-user-email") + "?", function (result) {
                    //                if (result) {
                    //                    $.ajax({
                    //                        url: "/api/user/" + link.attr("data-user-id"),
                    //                        method: "DELETE",
                    //                        success: function () {
                    //                            table.row(link.parents("tr")).remove().draw();
                    //                        }
                    //                    });
                    //                }
                    //            })
                    //        .css({
                    //            'font-weight': 'bold',
                    //            'margin-top': function () {
                    //                var w = $(window).height();
                    //                var b = $(".modal-dialog").height();
                    //                // should not be (w-h)/2
                    //                var h = (w - b) / 2;
                    //                return h + "px";
                    //            }
                    //        });
                    //    });
                    });
                      function error_handler(e) {
                        var errors = $.parseJSON(e.xhr.responseText);
                        if (errors) {
                            console.log(errors);
                            //alert("Errors: <br/>" + errors.join("<br/>"));
                        }
                    }
            </script>
        }
