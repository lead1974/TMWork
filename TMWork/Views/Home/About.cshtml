@model TMWork.Data.Models.Team.Member
@using TMWork.ViewModels.Home
@using TMWork.Data.Models.Customer
@using Microsoft.Extensions.Configuration;

@using Microsoft.AspNetCore.Http.Authentication
@using TMWork.Data.Models.User
@using TMWork.Services

@inject IConfiguration configuration;
@inject SignInManager<AuthUser> SignInManager
@inject UserManager<AuthUser> UserManager


@{
    ViewData["Title"] = "About";
    var members = ViewBag.Members;
}
<style>
    .box {
        width: 50%;
        float: left;
    }
</style>
<div class="col-lg-12">

    @using (Html.BeginForm())
    {
        <div class="col-lg-12">
            <h3>Our Mission</h3>
            @if (User.IsInRole(RoleName.CanManageSite))
            {
                <div class="btn-toolbar">
                    <a asp-controller="Home" asp-action="AboutEditOurMission" asp-route-returnurl="@ViewData["ReturnUrl"]" class="btn btn-primary btn-lg"><i class="glyphicon glyphicon-plus"></i> Edit Our Mission</a>
                </div>
            }
            <div>@Html.Raw(ViewBag.OurMission)</div>
        </div>

        <div class="col-lg-12">
            @if (User.IsInRole(RoleName.CanManageSite))
            {
                <div class="btn-toolbar">
                    <a asp-controller="Home" asp-action="AboutGetTeamMember" asp-route-returnurl="@ViewData["ReturnUrl"]" class="btn btn-primary btn-lg"><i class="glyphicon glyphicon-plus"></i> Add Team Member</a>
                </div>
            }
            <center>
                <div id="memberListView">
                    @foreach (TMWork.Data.Models.Team.Member m in members)
                    {
                        using (Html.BeginForm("DeleteTeamMemberAsync", "Home", new { memberId = m.MemberId }))
                        {
                            <div class="box">
                                @if (@m.Image == null)
                                {
                                    <img class="img img-thumbnail img-responsive" style="width:200px; height:200px" src="~/images/nophoto.gif" />
                                }
                                else
                                {
                                    <img class="img img-thumbnail img-responsive" style="width:200px; height:200px" src="@m.GetInlineImageSrc()" />
                                }
                                <br />
                                <br />
                                @m.Name
                                <br />
                                @Html.Raw(m.Description)
                                <br />
                                @if (User.IsInRole(RoleName.CanManageSite))
                                {
                                    <a href='@Url.Action("AboutGetTeamMember", "Home", new { memberId = m.MemberId })' class='btn bth-xs btn-primary'><i class='glyphicon glyphicon-edit'></i> Edit</a>
                                    <button class='btn bth-xs btn-danger k-delete-button' onclick="return confirm('Are you sure you want to delete this team member = @m.Name');"><i class='glyphicon glyphicon-trash'></i> Delete</button>
                                }
                            </div>
                        }
                    }
                </div>
            </center>
        </div>
    }



    <div class="col-md-7">
        <h3>Our Office Location</h3>
        <iframe src=@configuration.GetSection("SiteSettings")["GoogleMapCoordinates"] width="170%" height="450" frameborder="0" style="border:0" allowfullscreen></iframe>
    </div>
</div>
@section scripts
    {
    <script>
        $(document).ready(function () {
        });
    </script>
}